snippet     test_func
abbr        go test template
	func TestMethod(t *testing.T) {
		result := Hoge()
		if result != "hoge" {
			t.Errorf("expecting bar, got %s", result)
		}
	}

snippet     test_with_table
abbr        test function with table data
	func Test${1:HogeMethod}(t *testing.T) {
		tests := []struct {
			input string
			want  bool
		}{
			{"abc", true},
			{"", false},
			{"nil", false},
		}
		for _, tt := range tests {
			if got := ${1}(tt.input); got != tt.want {
				t.Fatalf("input:[%s] want = %t, got = %t", tt.input, tt.want, got)
			}
		}
	}

snippet     if_with_len
abbr        string empty check
	if len(s) == 0 {
	   return nil, errors.New("missing string")
	}

snippet     context_with_cancel
abbr        cancel可能なContextを作成します。
	ctx, cancel := context.WithCancel(ctx)
	defer cancel()

	do_something_child(ctx)

snippet     context_with_timeout
abbr        timeout付きのContextを作成します。
	ctx, cancel := context.WithTimeout(ctx, 1 * time.Second)
	defer cancel()

	do_something_child(ctx)

snippet     context_with_deadline
abbr        deadline(時刻指定)付きのContextを作成します。
	ctx, cancel := context.WithDeadline(ctx, 1 * time.Now())
	defer cancel()

	do_something_child(ctx)
